{"version":3,"sources":["theme.ts","Components/Generic/Header/HeaderTitle/HeaderTitle.tsx","Components/Generic/Header/HeaderMenu/MenuLink/MenuLink.tsx","Components/Generic/Header/HeaderMenu/NavLinks.ts","Components/Generic/Header/HeaderMenu/HeaderMenu.tsx","Components/Generic/Header/Header.tsx","Components/HomeComponents/HomeDetail/HomeDetail.tsx","Pages/HomePage.tsx","Pages/AboutPage.tsx","Components/InheritanceCalculatorComponents/ChatbotComponent/Widgets/OptionSelector/OptionSelector.tsx","Components/InheritanceCalculatorComponents/ChatbotComponent/Widgets/DeceasedOptionSelecor/DeceasedOptionSelecor.tsx","Components/InheritanceCalculatorComponents/ChatbotComponent/Widgets/UndividedEstateOptionSelector/UndividedEstateOptionSelector.tsx","Components/InheritanceCalculatorComponents/ChatbotComponent/Widgets/RearChildrenOptionSelector/RearChildrenOptionSelector.tsx","Components/InheritanceCalculatorComponents/ChatbotComponent/Helper/Classes/Person.ts","Components/InheritanceCalculatorComponents/ChatbotComponent/Generics.ts","Components/InheritanceCalculatorComponents/ChatbotComponent/Config.js","Components/InheritanceCalculatorComponents/ChatbotComponent/MessageParser.tsx","Components/InheritanceCalculatorComponents/ChatbotComponent/Widgets/ShowInfoWidget/ShowInfoWidget.tsx","Components/InheritanceCalculatorComponents/ChatbotComponent/Helper/Methods/QuestionConstants.tsx","Components/InheritanceCalculatorComponents/ChatbotComponent/Helper/Methods/InheritanceConstants.ts","Components/InheritanceCalculatorComponents/ChatbotComponent/Helper/Classes/Family.ts","Components/InheritanceCalculatorComponents/ChatbotComponent/ActionProvider.tsx","Components/InheritanceCalculatorComponents/ChatbotComponent/Helper/Methods/HelperMethods.tsx","Pages/InheritanceCalculatorPage.tsx","Components/Generic/Footer/Footer.tsx","assets/images/homepage-image.jpg","Pages/ResourcesPage.tsx","App.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","useStyles","makeStyles","root","fontFamily","color","HeaderTitle","classes","Typography","variant","className","noWrap","fontSize","padding","textDecoration","textAlign","backgroundColor","fontWeight","rootActive","MenuLink","props","to","href","exact","activeClassName","name","navLinks","id","title","path","HeaderMenu","Grid","container","direction","justifyContent","alignItems","NavLinks","map","item","header","height","paddingLeft","drawerContainer","menuIconRoot","Header","useState","mobileView","drawerOpen","state","setState","useEffect","setResponsiveness","window","innerWidth","prevState","addEventListener","AppBar","Toolbar","IconButton","edge","onClick","Drawer","anchor","open","onClose","Link","component","RouterLink","style","key","MenuItem","sm","highLightText","HomeDetail","Box","align","HomePage","AboutPage","OptionSelector","actionProvider","setOption","option","stepID","undividedEstate","handleUnderAge","deceasedOptionSelector","a","deceased","handleDeceasedOptionWidget","UndividedEstateOptionSelector","handleUndividedEstate","RearChildrenOptionSelector","rearChildren","handleRearChildrenOptionWidget","Person","_personID","_undividedEstateSpouse","_deceased","_spouse","_cohabitant","_parents","_children","_childrenRearing","_underAge","set_spouse","spouse","add_for_both","console","log","hasSurvivingSpouse","undefined","set_cohabitant","cohabitant","has_surviving_cohabitant_with_common_child","child","includes","has_surviving_cohabitant_without_common_child","add_parent","parent","push","add_child","children_array","child_id","find","obj","surviving_successor_distance","length","possible_distances","temp","Math","min","get_class_and_distance_closest_surviving_relative","alternatives","sort","b","closest_alternative_class","closest_alternative_distance","this","value","ChatbotState","person","caseName","netWealth","intValue","strValue","max_depth","config","botName","lang","customStyles","botMessageBox","chatButton","initialMessages","createChatBotMessage","widgets","widgetName","widgetFunc","mapStateToProps","MessageParser","message","curState","handleCaseName","handleTestator","handleNetWealth","handleSpouseInput","handleCohabitantInput","handleSuccessorInput","handleDefault","popover","pointerEvents","paper","spacing","ShowInfoWidget","containerRef","useRef","anchorEl","setAnchorEl","handlePopoverClose","Boolean","ref","onMouseEnter","event","currentTarget","onMouseLeave","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","current","text","QuestionConstants","TestatorQuestion","UndividedEstateQuestion","UndividedEstateWidgetOptions","widget","withAvatar","loading","terminateLoading","UndividedEstateResultText","selectedOption","undividedEstateResultText","NetWealthQuestion","NetWealthWarning","UnderAgeQuestion","UnderAgeResultText","underAgeResultText","UnderAgeWidgetOptions","SpouseQuestion","CohabitantQuestion","RearChildrenQuestion","RearChildrenWidgetOptions","addSuccessorquestion1","person_id","values","person_ID","addSuccessorquestion2","child_id_string","child_ID","AliveQuestionText","aliveQuestionText","AliveWidgetOptions","DefaultText","InheritanceConstants","DESC_COHABITANT_WITHOUT_COMMON_CHILD","DESC_NO_SPOUSE_OR_COHABITANT","DESC_COHABITANT_NO_CLOSE_RELATIVES_2","DESC_COHABITANT_NO_CLOSE_RELATIVES","DESC_SPOUSE_NO_CLOSE_RELATIVES_2","DESC_SPOUSE_NO_CLOSE_RELATIVES","G","MINIMUM_INHERITANCE_SPOUSE_VS_CHILDREN","FRACTION_INHERITANCE_SPOUSE_VS_CHILDREN","MINIMUM_INHERITANCE_SPOUSE_VS_PARENTS","FRACTION_INHERITANCE_SPOUSE_VS_PARENTS","MINIMUM_INHERITANCE_COHABITANT_VS_CHILDREN","FRACTION_INHERITANCE_COHABITANT_VS_CHILDREN","MINIMUM_INHERITANCE_COHABITANT_VS_PARENTS","FRACTION_INHERITANCE_COHABITANT_VS_PARENTS","LAW_LINKS","KapittelVI","CODE_PARAGRAPHS","Family","_person_dict","personID","Object","keys","ActionProvider","setStateFunc","createClientMessage","QuestionConsts","family","caseNameResponse","testatorQuestion","addMessageToBotState","testatorResponse","undividedEstateQuestion","undividedEstateResponse","undividedEstateResponseModifiedResult","undividedEstateClientMessage","netWealthQuestion","selectedOptionModified","underAgeResponse","spouseQuestion","spouseResponse","spouseID","rearChildrenQuestion","newSuccessorQuestion","cohabitantQuestion","cohabitantResponse","cohabitantID","successorResponse","get_or_create_person","allChildrenID","slice","handleDeceasedOption","rearChildrenResponse","messages","Array","isArray","currencyResponse","inputCurrencyValue","currencyOutputResponse","parseInt","Intl","NumberFormat","currency","currencyDisplay","format","underAgeQuestion","match","netWealthWarning","InheritanceCalculatorPage","Config","messageParser","Copyright","Date","getFullYear","footer","background","Footer","description","Container","maxWidth","gutterBottom","ResourcesPage","backgroundImage","HomePageImage","backgroundPosition","backgroundSize","backgroundRepeat","rootPaper","marginTop","minHeight","opacity","menuItems","App","Norsk","langMessages","locale","Paper","role","render","document","getElementById"],"mappings":"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","file":"static/js/main.0996e8a8.chunk.js","sourcesContent":["// import { createMuiTheme } from \"@material-ui/core\";\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#014777\",\n    },\n\n    // typography: {\n    //   root: {\n    //     fontFamily: \"Croissant One\",\n    //   },\n    // },\n  },\n});\n\nexport default theme;\n","import { ReactElement } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst root = {\n  fontFamily: '\"Abril Fatface\", serif',\n  color: \"#016196\",\n};\n\nconst useStyles = makeStyles({ root });\nconst HeaderTitle = (): ReactElement => {\n  const classes = useStyles();\n\n  return (\n    <Typography variant=\"h2\" className={classes.root} noWrap>\n      ARVEBOT\n    </Typography>\n  );\n};\n\nexport default HeaderTitle;\n","// import classes from \"./MenuLink.module.css\";\nimport { ReactElement } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink } from \"react-router-dom\";\n\ninterface propsTypes {\n  href: string;\n  name: ReactElement;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    fontFamily: '\"Work Sans\", sans-serif',\n    // fontWeight: \"300\",\n    fontSize: \"1.3rem\",\n    color: \"#4151C9\",\n    padding: \"0 20px\",\n    textDecoration: \"none\",\n    textAlign: \"center\",\n    \"&:hover\": {\n      color: \"#FFF5EE\",\n      backgroundColor: \"#87AFC7\",\n      fontWeight: \"bold\",\n    },\n  },\n  rootActive: {\n    backgroundColor: \"#FFCBA4\",\n    color: \"#2B3856\",\n    \"&:hover\": {\n      backgroundColor: \"#FCCABD\",\n      color: \"#2B3856\",\n    },\n  },\n});\n\nconst MenuLink = (props: propsTypes): ReactElement => {\n  const classes = useStyles(props);\n  return (\n    <NavLink\n      to={props.href}\n      className={classes.root}\n      exact\n      activeClassName={classes.rootActive}\n    >\n      {props.name}\n    </NavLink>\n  );\n};\n\nexport default MenuLink;\n","const navLinks = [\n  {\n    id: 0,\n    title: \"Menu.Home\",\n    path: \"/\",\n  },\n  {\n    id: 1,\n    title: \"Menu.Calculator\",\n    path: \"/calculator\",\n  },\n  {\n    id: 2,\n    title: \"Menu.About\",\n    path: \"/about\",\n  },\n  {\n    id: 3,\n    title: \"Menu.Resources\",\n    path: \"/resources\",\n  },\n];\n\nexport default navLinks;\n","import { Grid } from \"@material-ui/core\";\nimport MenuLink from \"./MenuLink/MenuLink\";\nimport NavLinks from \"./NavLinks\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ReactElement } from \"react\";\n\nconst HeaderMenu = (): ReactElement => {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"space-evenly\"\n      alignItems=\"center\"\n    >\n      {NavLinks.map(({ id, title, path }) => {\n        return (\n          <Grid item key={id}>\n            <MenuLink name={<FormattedMessage id={`${title}`} />} href={path} />\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default HeaderMenu;\n","import { useState, useEffect, ReactElement } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  Grid,\n  IconButton,\n  Drawer,\n  Link,\n  MenuItem,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport HeaderTitle from \"./HeaderTitle/HeaderTitle\";\nimport HeaderMenu from \"./HeaderMenu/HeaderMenu\";\nimport NavLinks from \"../../Generic/Header/HeaderMenu/NavLinks\";\n\nconst useStyles = makeStyles({\n  header: {\n    backgroundColor: \"white\",\n    height: \"5rem\",\n  },\n  \"@media (max-width: 900px)\": {\n    paddingLeft: 0,\n  },\n  drawerContainer: {\n    padding: \"20px 30px\",\n  },\n  menuIconRoot: {\n    color: \"#4151C9\",\n  },\n});\n\nconst getDrawerChoices = () => {\n  return NavLinks.map(({ id, title, path }) => {\n    return (\n      <Link\n        {...{\n          component: RouterLink,\n          to: path,\n          color: \"inherit\",\n          style: { textDecoration: \"none\" },\n          key: id,\n        }}\n      >\n        <MenuItem>{title}</MenuItem>\n      </Link>\n    );\n  });\n};\nconst displayDesktop = () => {\n  return (\n    <Toolbar>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item sm={6}>\n          <HeaderTitle />\n        </Grid>\n        <Grid item sm={6}>\n          <HeaderMenu />\n        </Grid>\n      </Grid>\n    </Toolbar>\n  );\n};\n\nconst Header = (): ReactElement => {\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false,\n  });\n  const { mobileView, drawerOpen } = state;\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\n    };\n    setResponsiveness();\n    window.addEventListener(\"resize\", () => setResponsiveness());\n  }, []);\n\n  const classes = useStyles();\n\n  const displayMobile = () => {\n    const handleDrawerOpen = () =>\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\n    const handleDrawerClose = () =>\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n    return (\n      <Toolbar>\n        <MenuIcon className={classes.menuIconRoot} />\n        <IconButton edge=\"start\" color=\"inherit\" onClick={handleDrawerOpen} />\n        <Drawer anchor=\"left\" open={drawerOpen} onClose={handleDrawerClose}>\n          <div className={classes.drawerContainer}>{getDrawerChoices()}</div>\n        </Drawer>\n        <HeaderTitle />\n      </Toolbar>\n    );\n  };\n\n  return (\n    <AppBar className={classes.header}>\n      {mobileView ? displayMobile() : displayDesktop()}\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { ReactElement } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  root: {\n    padding: \"10rem 20rem\",\n    color: \"white\",\n    fontFamily: '\"Work Sans\", sans-serif',\n  },\n  highLightText: {\n    fontFamily: '\"Abril Fatface\", serif',\n    fontSize: \"4rem\",\n    color: \"yellow\",\n  },\n});\nconst HomeDetail = (): ReactElement => {\n  const classes = useStyles();\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" align=\"center\" className={classes.root}>\n        hahah Lurer du på hvem som arver Peder Ås når han dør? <br />\n        Hvor mye får kona og barna? Hva med stesønnen? <br />\n        Og hvor mye kan han testamentere til Lilleviks fuglekikkerforening?{\" \"}\n        <br /> <br />\n        <span className={classes.highLightText}>BeregnArv</span> hjelper deg å\n        finne løsningen og relevant rettsgrunnlag.\n      </Typography>\n    </Box>\n  );\n};\n\nexport default HomeDetail;\n","import { ReactElement } from \"react\";\nimport HomeDetail from \"../Components/HomeComponents/HomeDetail/HomeDetail\";\n\nconst HomePage = (): ReactElement => {\n  return (\n    // <Typography variant=\"h2\" align=\"center\">\n    //   HomePage\n    // </Typography>\n    <HomeDetail />\n  );\n};\n\nexport default HomePage;\n","import { Typography } from \"@material-ui/core\";\nimport { ReactElement } from \"react\";\n\nconst AboutPage = (): ReactElement => {\n  return (\n    <Typography variant=\"h2\" align=\"center\">\n      About Page\n    </Typography>\n  );\n};\n\nexport default AboutPage;\n","import \"./OptionSelector.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ReactElement } from \"react\";\n\nconst OptionSelector = (props: any): ReactElement => {\n  const { setState, actionProvider } = props;\n\n  const setOption = (option: any) => {\n    setState((state: any) => ({\n      ...state,\n      stepID: 5,\n      undividedEstate: option,\n    }));\n\n    actionProvider.handleUnderAge(option);\n  };\n  return (\n    <div>\n      <div className=\"option-selector-button-container\">\n        <button\n          className=\"option-selector-button\"\n          onClick={() => setOption(true)}\n        >\n          <FormattedMessage id=\"Chatbot.Yes\" />\n        </button>\n        <button\n          className=\"option-selector-button\"\n          onClick={() => setOption(false)}\n        >\n          <FormattedMessage id=\"Chatbot.No\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default OptionSelector;\n","import { ReactElement } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./DeceasedOptionSelector.scss\";\n\nconst deceasedOptionSelector = (props: any): ReactElement => {\n  const { setState, actionProvider } = props;\n\n  const setOption = async (option: any) => {\n    setState((state: any) => ({\n      ...state,\n      stepID: 5,\n      deceased: option,\n    }));\n\n    actionProvider.handleDeceasedOptionWidget(option);\n  };\n  return (\n    <div>\n      hahahah\n      <p className=\"deceased-option-selector-header\">\n        <FormattedMessage id=\"Chatbot.ChooseAppropriate\" />{\" \"}\n      </p>\n      <div className=\"deceased-option-selector-button-container\">\n        <button\n          className=\"deceased-option-selector-button\"\n          onClick={() => setOption(true)}\n        >\n          <FormattedMessage id=\"Chatbot.Yes\" />\n        </button>\n        <button\n          className=\"deceased-option-selector-button\"\n          onClick={() => setOption(false)}\n        >\n          <FormattedMessage id=\"Chatbot.No\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default deceasedOptionSelector;\n","import { ReactElement } from \"react\";\nimport \"./UndividedEstateOptionSelector.scss\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst UndividedEstateOptionSelector = (props: any): ReactElement => {\n  const { setState, actionProvider } = props;\n\n  const setOption = (option: any) => {\n    setState((state: any) => ({\n      ...state,\n      stepID: 3,\n      undividedEstate: option,\n    }));\n\n    actionProvider.handleUndividedEstate(option);\n  };\n  return (\n    <div>\n      <div className=\"option-selector-button-container\">\n        <button\n          className=\"option-selector-button\"\n          onClick={() => setOption(true)}\n        >\n          <FormattedMessage id=\"Chatbot.Yes\" />\n        </button>\n        <button\n          className=\"option-selector-button\"\n          onClick={() => setOption(false)}\n        >\n          <FormattedMessage id=\"Chatbot.No\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UndividedEstateOptionSelector;\n","import { ReactElement } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./RearChildrenOptionSelector.scss\";\n\nconst RearChildrenOptionSelector = (props: any): ReactElement => {\n  const { setState, actionProvider } = props;\n\n  const setOption = async (option: any) => {\n    setState((state: any) => ({\n      ...state,\n      // stepID: 5,\n      rearChildren: option,\n    }));\n\n    actionProvider.handleRearChildrenOptionWidget(option);\n  };\n  return (\n    <div>\n      <div className=\"option-selector-button-container\">\n        <button\n          className=\"option-selector-button\"\n          onClick={() => setOption(true)}\n        >\n          <FormattedMessage id=\"Chatbot.Yes\" />\n        </button>\n        <button\n          className=\"option-selector-button\"\n          onClick={() => setOption(false)}\n        >\n          <FormattedMessage id=\"Chatbot.No\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RearChildrenOptionSelector;\n","export default class Person {\n  _personID = \"\";\n  _undividedEstateSpouse: Person | undefined;\n  _deceased = false;\n  _spouse: Person | undefined;\n  _cohabitant: Person | undefined;\n  _parents: Array<Person> = [];\n  _children: Array<Person> = [];\n  _childrenRearing: boolean | undefined;\n  _underAge: boolean | undefined;\n\n  constructor(id: string) {\n    this._personID = id;\n  }\n\n  get person_id(): string {\n    return this._personID;\n  }\n  set person_id(value: string) {\n    this._personID = value;\n  }\n\n  get deceased(): boolean {\n    return this._deceased;\n  }\n  set deceased(value: boolean) {\n    this._deceased = value;\n  }\n  get undividedEstateSpouse(): Person | undefined {\n    return this._undividedEstateSpouse;\n  }\n  set undividedEstateSpouse(value: Person | undefined) {\n    this._undividedEstateSpouse = value;\n  }\n\n  get spouse(): Person | undefined {\n    return this._spouse;\n  }\n  set_spouse = (spouse: Person, add_for_both = true): void => {\n    if (!this._spouse) console.log(this._spouse == spouse);\n    else this._spouse = spouse;\n    if (add_for_both) spouse.set_spouse(this, false);\n  };\n\n  hasSurvivingSpouse = (): boolean => {\n    if (this._spouse !== undefined && !this._spouse._deceased) return true;\n    else return false;\n  };\n\n  get cohabitant(): Person | undefined {\n    return this._cohabitant;\n  }\n  set_cohabitant = (cohabitant: Person, add_for_both = true): void => {\n    if (!this._cohabitant) console.log(this._cohabitant == cohabitant);\n    else this._cohabitant = cohabitant;\n    if (add_for_both) cohabitant.set_cohabitant(this, false);\n  };\n\n  has_surviving_cohabitant_with_common_child = (): boolean => {\n    if (this._cohabitant && !this._cohabitant._deceased) {\n      for (const child of this._children) {\n        if (this._cohabitant._children.includes(child)) return true;\n      }\n      return false;\n    } else return false;\n  };\n\n  has_surviving_cohabitant_without_common_child = (): boolean => {\n    if (this._cohabitant && !this._cohabitant._deceased) {\n      for (const child of this._children) {\n        if (this._cohabitant._children.includes(child)) return false;\n      }\n      return true;\n    } else return false;\n  };\n\n  has_surviving_cohabitant(): boolean {\n    if (this._cohabitant && !this._cohabitant._deceased) return true;\n    else return false;\n  }\n\n  get parents(): Person[] | undefined {\n    return this._parents;\n  }\n  add_parent = (parent: Person, add_for_both = true): void => {\n    if (!this._parents.includes(parent)) {\n      this._parents.push(parent);\n    }\n    if (add_for_both) {\n      parent.add_child(this, false);\n    }\n  };\n\n  get children(): Array<Person> {\n    return this._children;\n  }\n  add_child = (child: Person, add_for_both = true): void => {\n    console.log(this._children);\n    const children_array = this._children;\n    const child_id = child._personID;\n    if (!children_array.find((obj) => obj._personID === child_id)) {\n      this._children.push(child);\n    }\n    console.log(this._children);\n    if (add_for_both) {\n      child.add_parent(this, false);\n    }\n    console.log(this._children);\n  };\n\n  surviving_successor_distance = (): number | undefined => {\n    if (this._deceased === false) return 0;\n    else if (this._children.length === 0) return undefined;\n    else {\n      const possible_distances: Array<number> = [];\n      for (const child of this._children) {\n        const temp = child.surviving_successor_distance();\n        if (temp != undefined) {\n          possible_distances.push(1 + temp);\n        }\n      }\n      if (possible_distances.length === 0) return undefined;\n      else return Math.min(...possible_distances);\n    }\n  };\n\n  get_class_and_distance_closest_surviving_relative = (): [\n    number | undefined,\n    number | undefined\n  ] => {\n    const distance = this.surviving_successor_distance();\n    if (distance !== undefined) return [1, this.surviving_successor_distance()];\n    else if (this._parents.length == 0) return [undefined, undefined];\n    else {\n      const alternatives: Array<Array<number | undefined>> = [];\n      for (const parent of this._parents) {\n        alternatives.push(\n          parent.get_class_and_distance_closest_surviving_relative()\n        );\n      }\n\n      alternatives.sort((a, b) => {\n        if (a[0] != undefined && b[0] != undefined) return a[0] - b[0];\n        if (a[0] == undefined && b[0] != undefined) return 1;\n        return -1;\n      });\n      const [closest_alternative_class, closest_alternative_distance] =\n        alternatives[0];\n\n      if (closest_alternative_class == undefined) {\n        return [undefined, undefined];\n      }\n      return [closest_alternative_class + 1, closest_alternative_distance];\n    }\n  };\n}\n","import Person from \"../ChatbotComponent/Helper/Classes/Person\";\n\nexport interface ChatbotInterface<T> {\n  stepID: number;\n  person: T;\n  caseName: string | null;\n  netWealth: { intValue: number; strValue: string };\n  undividedEstate: boolean;\n  temp: string;\n  max_depth: boolean | null;\n}\n\nexport const ChatbotState: ChatbotInterface<Person> = {\n  stepID: 0,\n  person: new Person(\"\"),\n  caseName: null,\n  netWealth: { intValue: 0, strValue: \"\" },\n  undividedEstate: false,\n  temp: \"\",\n  max_depth: null,\n};\n","import { createChatBotMessage } from \"react-chatbot-kit\";\nimport { FormattedMessage } from \"react-intl\";\nimport OptionSelector from \"./Widgets/OptionSelector/OptionSelector\";\nimport DeceasedOptionSelector from \"./Widgets/DeceasedOptionSelecor/DeceasedOptionSelecor\";\nimport UndividedEstateOptionSelector from \"./Widgets/UndividedEstateOptionSelector/UndividedEstateOptionSelector\";\nimport RearChildrenOptionSelector from \"./Widgets/RearChildrenOptionSelector/RearChildrenOptionSelector\";\nimport { ChatbotState } from \"./Generics\";\nimport \"../chatbot.scss\";\n\nconst botName = \"Arvebot\";\nconst config = {\n  botName: botName,\n  lang: \"no\",\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: \"#376B7E\",\n    },\n    chatButton: {\n      backgroundColor: \"#5ccc9d\",\n    },\n  },\n  initialMessages: [\n    createChatBotMessage(<FormattedMessage id=\"Chatbot.CASE_NAME_QUESTION\" />),\n  ],\n  state: ChatbotState,\n  widgets: [\n    {\n      widgetName: \"optionSelectorWidget\",\n      widgetFunc: (props) => <OptionSelector {...props} />,\n      mapStateToProps: [\"stepID\", \"underAge\"],\n    },\n    {\n      widgetName: \"undividedEstateSelectorWidget\",\n      widgetFunc: (props) => <UndividedEstateOptionSelector {...props} />,\n      mapStateToProps: [\"stepID\", \"undividedEstate\"],\n    },\n    {\n      widgetName: \"RearChildrenSelectorWidget\",\n      widgetFunc: (props) => <RearChildrenOptionSelector {...props} />,\n      mapStateToProps: [\"stepID\", \"rearChildren\"],\n    },\n    {\n      widgetName: \"deceasedOptionSelectorWidget\",\n      widgetFunc: (props) => <DeceasedOptionSelector {...props} />,\n      mapStateToProps: [\"stepID\", \"deceased\"],\n    },\n  ],\n};\n\nexport default config;\n","import ActionProvider from \"./ActionProvider\";\nimport { ChatbotInterface } from \"./Generics\";\nimport Person from \"./Helper/Classes/Person\";\n\nclass MessageParser {\n  actionProvider: any;\n  state: any;\n  constructor(actionProvider: ActionProvider, state: ChatbotInterface<Person>) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n  }\n\n  parse(message: string): ReturnType<() => void> {\n    const curState = this.state;\n    if (curState.stepID === 0) {\n      return this.actionProvider.handleCaseName(message); //set stepID = 1\n    }\n    if (curState.stepID === 1) {\n      return this.actionProvider.handleTestator(message); //set stepID = 2\n    }\n    if (curState.stepID === 2) {\n      return this.actionProvider.handleUndividedEstate(message); //set stepID = 3\n    }\n    if (curState.stepID === 3) {\n      return this.actionProvider.handleNetWealth(message); //set stepID = 4\n    }\n    if (curState.stepID === 4) {\n      return this.actionProvider.handleUnderAge(message); //set stepID = 5\n    }\n    if (curState.stepID === 5) {\n      return this.actionProvider.handleSpouseInput(message); //set stepID = 6\n    }\n    if (curState.stepID === 6) {\n      return this.actionProvider.handleCohabitantInput(message); //set stepID = 7\n    }\n    if (curState.stepID === 7) {\n      return this.actionProvider.handleSuccessorInput(message);\n    }\n    if (curState.stepID === 9) {\n      return this.actionProvider.handleSuccessorInput(message);\n    } else {\n      return this.actionProvider.handleDefault();\n    }\n  }\n}\n\nexport default MessageParser;\n","import { ReactElement, useRef, useState } from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./ShowInfoWidget.scss\";\nimport LiveHelpIcon from \"@material-ui/icons/LiveHelp\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormattedMessage } from \"react-intl\";\n// import { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  popover: {\n    pointerEvents: \"none\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n    backgroundColor: \"#e8e4c9\",\n  },\n}));\n\nconst ShowInfoWidget = (props: any): ReactElement => {\n  const classes = useStyles();\n  /*\n   used reference to parent element for correcting the scrollbar conflict issue on popover show. \n   https://stackoverflow.com/questions/53985436/material-ui-unblock-scrolling-when-popover-is-opened\n  */\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handlePopoverOpen = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  return (\n    <div className=\"infoDiv\" ref={containerRef}>\n      <LiveHelpIcon\n        className=\"InfoWidgetIcon\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n        aria-owns={open ? \"mouse-over-popover\" : undefined}\n        aria-haspopup=\"true\"\n      />\n\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n        container={containerRef.current}\n      >\n        <FormattedMessage id={props.text} />\n      </Popover>\n    </div>\n  );\n};\n\nexport default ShowInfoWidget;\n","import { ReactElement } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport ShowInfoWidget from \"../../Widgets/ShowInfoWidget/ShowInfoWidget\";\n\nclass QuestionConstants {\n  TestatorQuestion = (<FormattedMessage id=\"Chatbot.TESTATOR_QUESTION\" />);\n\n  UndividedEstateQuestion = (\n    <FormattedMessage id=\"Chatbot.UNDIVIDED_ESTATE_QUESTION\" />\n  );\n\n  UndividedEstateWidgetOptions = {\n    widget: \"undividedEstateSelectorWidget\",\n    withAvatar: true,\n    loading: true,\n    terminateLoading: true,\n  };\n\n  UndividedEstateResultText = (selectedOption: string): ReactElement => {\n    const undividedEstateResultText = selectedOption\n      ? \"Chatbot.Yes\"\n      : \"Chatbot.No\";\n    return <FormattedMessage id={undividedEstateResultText} />;\n  };\n\n  NetWealthQuestion = (\n    <div>\n      <FormattedMessage id=\"Chatbot.NET_WEALTH_QUESTION\" />\n      <ShowInfoWidget text=\"Chatbot.NET_WEALTH_EXTRA_INFO\" />\n    </div>\n  );\n\n  NetWealthWarning = (<FormattedMessage id=\"Chatbot.NET_WEALTH_WARNING\" />);\n\n  UnderAgeQuestion = (<FormattedMessage id=\"Chatbot.UNDER_AGE_QUESTION\" />);\n\n  UnderAgeResultText = (selectedOption: string): ReactElement => {\n    const underAgeResultText = selectedOption\n      ? \"Chatbot.UnderAge\"\n      : \"Chatbot.NotUnderAge\";\n\n    return <FormattedMessage id={underAgeResultText} />;\n  };\n\n  UnderAgeWidgetOptions = {\n    widget: \"optionSelectorWidget\",\n    withAvatar: true,\n    loading: true,\n    terminateLoading: true,\n  };\n\n  SpouseQuestion = (<FormattedMessage id=\"Chatbot.SPOUSE_QUESTION\" />);\n\n  CohabitantQuestion = (\n    <div>\n      <FormattedMessage id=\"Chatbot.COHABITANT_QUESTION\" />\n      <ShowInfoWidget text=\"Chatbot.COHABITANT_EXTRA_INFO\" />\n    </div>\n  );\n\n  RearChildrenQuestion = (\n    <FormattedMessage id=\"Chatbot.REAR_CHILDREN_QUESTION\" />\n  );\n\n  RearChildrenWidgetOptions = {\n    widget: \"RearChildrenSelectorWidget\",\n    withAvatar: true,\n    loading: true,\n    terminateLoading: true,\n  };\n\n  addSuccessorquestion1 = (person_id: string): ReactElement => {\n    return (\n      <div>\n        <FormattedMessage\n          id=\"Chatbot.addSuccessorQn1\"\n          values={{ person_ID: person_id }}\n        />\n        <ShowInfoWidget text=\"Chatbot.CHILD_EXTRA_INFO\" />\n      </div>\n    );\n  };\n  addSuccessorquestion2 = (\n    person_id: string,\n    child_id_string: string\n  ): ReactElement => {\n    return (\n      <div>\n        <FormattedMessage\n          id=\"Chatbot.addSuccessorQn2\"\n          values={{ person_ID: person_id, child_ID: child_id_string }}\n        />\n        <ShowInfoWidget text=\"Chatbot.CHILD_EXTRA_INFO\" />\n      </div>\n    );\n  };\n\n  AliveQuestionText = (selectedOption: string): ReactElement => {\n    const aliveQuestionText = selectedOption ? \"Chatbot.Yes\" : \"Chatbot.No\";\n\n    return <FormattedMessage id={aliveQuestionText} />;\n  };\n\n  AliveWidgetOptions = {\n    widget: \"deceasedOptionSelectorWidget\",\n    withAvatar: true,\n    loading: true,\n    terminateLoading: true,\n  };\n\n  DefaultText = (<FormattedMessage id=\"Chatbot.DEFAULT_TEXT\" />);\n}\n\nexport default QuestionConstants;\n","export default class InheritanceConstants {\n  DESC_COHABITANT_WITHOUT_COMMON_CHILD =\n    \"Arvelater har ikke felles barn med samboer og vedkommende har ikke krav på arv (MED MINDRE DE VENTER FELLES BARN!).\";\n  DESC_NO_SPOUSE_OR_COHABITANT =\n    \"Arvelater etterlater hverken ektefelle eller samboer.\";\n  DESC_COHABITANT_NO_CLOSE_RELATIVES_2 =\n    \"Arvelaters nærmeste gjenlevende slektning er i tredje arvegangsklasse, men etterkommer av barnebarn av arvelaters besteforeldre. Hele arven går da til gjenlevende samboer med felles barn.\";\n  DESC_COHABITANT_NO_CLOSE_RELATIVES =\n    \"Arvelater har ingen gjenlevende slektninger i de tre første arvegangsklassene. Hele arven går da til gjenlevende samboer med felles barn.\";\n  DESC_SPOUSE_NO_CLOSE_RELATIVES_2 =\n    \"Arvelaters nærmeste gjenlevende slektning er i andre arvegangsklasse, men etterkommer av barnebarn av arvelaters besteforeldre. Hele arven går da til gjenlevende ektefellep.\";\n  DESC_SPOUSE_NO_CLOSE_RELATIVES =\n    \"Arvelater har ingen gjenlevende slektninger i de to første arvegangsklassene. Hele arven går da til gjenlevende ektefelle.\";\n\n  G = 101351;\n  MINIMUM_INHERITANCE_SPOUSE_VS_CHILDREN = 4 * this.G;\n  FRACTION_INHERITANCE_SPOUSE_VS_CHILDREN = 1 / 4;\n  MINIMUM_INHERITANCE_SPOUSE_VS_PARENTS = 6 * this.G;\n  FRACTION_INHERITANCE_SPOUSE_VS_PARENTS = 1 / 2;\n  MINIMUM_INHERITANCE_COHABITANT_VS_CHILDREN = 4 * this.G;\n  FRACTION_INHERITANCE_COHABITANT_VS_CHILDREN = 0;\n  MINIMUM_INHERITANCE_COHABITANT_VS_PARENTS = 4 * this.G;\n  FRACTION_INHERITANCE_COHABITANT_VS_PARENTS = 0;\n\n  LAW_LINKS = {\n    1: \"https://lovdata.no/NL/lov/1972-03-03-5/§1\",\n    2: \"https://lovdata.no/NL/lov/1972-03-03-5/§2\",\n    3: \"https://lovdata.no/NL/lov/1972-03-03-5/§3\",\n    4: \"https://lovdata.no/NL/lov/1972-03-03-5/§4\",\n    6: \"https://lovdata.no/NL/lov/1972-03-03-5/§6\",\n    28: \"https://lovdata.no/NL/lov/1972-03-03-5/§28\",\n    36: \"https://lovdata.no/NL/lov/1972-03-03-5/§36\",\n    46: \"https://lovdata.no/NL/lov/1972-03-03-5/§46\",\n    KapittelVI: \"https://lovdata.no/pro/NL/lov/1972-03-03-5/KAPITTEL_1-7\",\n  };\n\n  CODE_PARAGRAPHS = {\n    \"1 første og annet ledd\":\n      \"Næraste slektsarvingar er avkomet (livsarvingane) til arvelataren.\\n\\nBarna til arvelataren arvar likt dersom ikkje anna går fram av særskilde lovreglar. Er eit barn død, går arvelotten til livsarvingane etter barnet, med lik part på kvar grein.\",\n    \"2 første, andre og tredje ledd\":\n      \"Har arvelataren ikkje livsarving, går arven til foreldra hans.\\n\\nForeldre arvar likt. Er far eller mor død, går arvelotten til hans eller hennar livsarvingar, med lik part på kvar grein.\\n\\nEr ein av foreldra død, og er det ikkje livsarving etter han, går heile arven til den andre av foreldra eller til hans eller hennar livsarvingar. Døyr arvelataren før fylte 18 år, går likevel halve arven til besteforeldra på den døde fars eller mors side eller til deira livsarvingar i samsvar med § 3, dersom foreldra ikkje var gifte med kvarandre då den første døydde eller det låg føre omstende som nemnt i § 8. Er det heller ingen slike arvingar i live, gjeld reglane i første punktum.\",\n    \"3 første ledd, andre punktum\":\n      \"Fjernare slektningar enn barnebarn til besteforeldre har likevel ikkje arverett etter loven.\",\n    \"3 første og annet ledd\":\n      \"Har arvelataren ikkje livsarving eller ektemake, og lever ikkje far eller mor, eller livsarving etter far eller mor, går arven til besteforeldra hans eller til livsarvingar etter dei, slik at reglane i § 2 andre ledd gjeld tilsvarande. Fjernare slektningar enn barnebarn til besteforeldre har likevel ikkje arverett etter loven.\\n\\nEr ein av besteforeldra død utan barn eller barnebarn i live, går arvelotten hans til den andre av besteforeldra på same side eller til barn eller barnebarn til denne. Er det ikkje arvingar på den eine sida, går heile arven til arvingane på den andre sida.\",\n    4: \"Arverett etter kapitlet her gjeld berre morskap eller farskap som følgjer av reglane i barnelova.​\\n\\nFaren og farsslekta tar ikkje arv etter barnet dersom det er avla med ei handling som er brotsverk mot noka føresegn i straffelovas​ §§ 291, 292 bokstav a og d, 293, 294, 295, 296, 299 bokstav a, 300 bokstav a og d, 301, 302 første punktum, 303, 312 og 314 bokstav a og som faren er dømd til fengselsstraff for utan vilkår. Dette gjeld likevel ikkje arvelott som i verdi svarar til arv eller gåve barnet har fått frå faren eller nokon i farsslekta\",\n    \"6 første ledd\":\n      \"Ektemaken har rett til fjerdeparten av arven når det er livsarvinger etter arvelateren. Minstearven skal likevel tilsvare 4 ganger grunnbeløpet i folketrygda ved dødsfallet. Er dei næraste slektsarvingane til arvelateren foreldra hans eller avkom etter desse, har ektemaken rett til halvparten av arven, likevel minst 6 ganger grunnbeløpet i folketrygda ved dødsfallet.\",\n    \"6 første og annet ledd\":\n      \"Ektemaken har rett til fjerdeparten av arven når det er livsarvinger etter arvelateren. Minstearven skal likevel tilsvare 4 ganger grunnbeløpet i folketrygda ved dødsfallet. Er dei næraste slektsarvingane til arvelateren foreldra hans eller avkom etter desse, har ektemaken rett til halvparten av arven, likevel minst 6 ganger grunnbeløpet i folketrygda ved dødsfallet.\\n\\nEr det ikkje arvingar som nemnt i første ledd, arvar ektemaken alt.\",\n    \"28 b første ledd\":\n      \"Den som var sambuar med den avdøde ved dødsfallet og har, har hatt eller ventar barn med den avdøde, har rett til arv svarande til 4 gonger grunnbeløpet i folketrygda ved dødsfallet, jamvel om det er livsarvingar etter arvelataren. Same retten til arv utan omsyn til livsarvingar har også den som har vore sambuar med den avdøde i minst dei siste fem åra før dødsfallet, dersom den avdøde har fastsett det i testament.\",\n    36: \"Barn av arvelataren som ikkje har fått oppfostringa si fullenda på den tid arvelataren døyr, har krav på ein sum av buet som forlott til å sikre livsopphald og utdanning dersom dette er rimeleg etter tilhøva. Storleiken av summen skal avpassast etter tilhøva. Ved avgjerda skal det m.a. takast omsyn til den arvelotten det uforsytte barnet elles får, om barnet har eigen formue, om barnet er sikra oppfostring på annan måte, og kva utgifter arvelataren har hatt til utdanning av dei andre barna sine. Er det fleire barn utan forsyting, skal kvart barn ha så mykje som er rimelig når det blir tatt omsyn til kva dei treng og til tilhøva elles.​\\n\\nHeimeverande barn som utan rimeleg vederlag har gjort særleg mykje for arvelataren, kan ved arveoppgjeret krevje å få ein sum av buet som forlott dersom dette er rimeleg etter tilhøva. Storleiken av summen skal avpassast etter tilhøva. Ved avgjerda skal det m.a. takast omsyn til den innsats barnet har gjort, dei utsikter det har i arbeidslivet, kor stor arvelott barnet elles vil få og den økonomiske stoda i det heile til barnet​ og dei andre arvingane\",\n    \"46 første ledd, første punktum\":\n      \"Har avdøde ikkje slektningar, ektemake eller sambuar som arvar han, og har han ikkje gjort testament om arven, skal nettoformuen fordelast til frivillig verksemd til fordel for barn og unge.\",\n  };\n}\n","import Person from \"./Person\";\n\nclass Family {\n  _person_dict: Record<string, Person>;\n\n  constructor() {\n    this._person_dict = {};\n  }\n\n  get_or_create_person(personID: string): Person {\n    if (personID in Object.keys(this._person_dict)) {\n      return this._person_dict[personID];\n    } else {\n      const person = new Person(personID);\n      this._person_dict[personID] = person;\n      return person;\n    }\n  }\n}\n\nexport default Family;\n","import * as HelperMethods from \"./Helper/Methods/HelperMethods\";\nimport QuestionConsts from \"./Helper/Methods/QuestionConstants\";\nimport InheritanceConstants from \"./Helper/Methods/InheritanceConstants\";\nimport Person from \"./Helper/Classes/Person\";\nimport Family from \"./Helper/Classes/Family\";\nimport { ChatbotInterface } from \"./Generics\";\nimport { ReactElement } from \"react\";\n\nclass ActionProvider {\n  createChatBotMessage: (\n    questionElement: ReactElement,\n    widget?: Record<string, unknown>\n  ) => ReactElement;\n  setState: (state: any) => any;\n  createClientMessage: (messageElement: ReactElement) => any;\n  QuestionConsts: QuestionConsts;\n  InheritanceConstants: InheritanceConstants;\n  family: Family;\n  constructor(\n    createChatBotMessage: (\n      questionElement: ReactElement,\n      widget?: Record<string, unknown>\n    ) => ReactElement,\n    setStateFunc: (state: any) => any,\n    createClientMessage: (messageElement: ReactElement) => any\n  ) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n    this.QuestionConsts = new QuestionConsts();\n    this.InheritanceConstants = new InheritanceConstants();\n    this.family = new Family();\n  }\n\n  handleCaseName = (caseNameResponse: string): void => {\n    /**\n     *  * function for handling caseName replies. open reply currently.\n     *  * the stepID is updated to 1. and then proceed to testator question.\n     */\n\n    const testatorQuestion = this.createChatBotMessage(\n      this.QuestionConsts.TestatorQuestion\n    );\n\n    this.setState((state: ChatbotInterface<Person>) => ({\n      ...state,\n      stepID: 1,\n      caseName: caseNameResponse,\n    }));\n\n    // this.updateStateProperty({ stepID: 1, caseName: caseNameResponse });\n    this.addMessageToBotState(testatorQuestion);\n  };\n\n  handleTestator = (testatorResponse: string): void => {\n    /**\n     *  * function for handling personID replies.\n     *  * stepID is updated to 2 and then proceed to wealth question.\n     *  * open reply, no conditions for now.\n     */\n\n    const undividedEstateQuestion = this.createChatBotMessage(\n      this.QuestionConsts.UndividedEstateQuestion,\n      this.QuestionConsts.UndividedEstateWidgetOptions\n    );\n\n    this.setState((state: ChatbotInterface<Person>) => ({\n      ...state,\n      stepID: 2,\n      person: { ...state.person, _personID: testatorResponse },\n    }));\n    this.addMessageToBotState(undividedEstateQuestion);\n  };\n\n  handleUndividedEstate = (undividedEstateResponse: string): void => {\n    // TODO: implement Yes/No conditions for undivided states.\n    // TODO: need to fix the values in object and correctly implement the whole algorithm\n    // TODO: check for correct text for the questions. (last step, the format of questions already available)\n\n    // const selectedOption = this.QuestionConsts.UndividedEstateResultText(\n    //   undividedEstateResponse\n    // );\n    this.setState((state: ChatbotInterface<Person>) => ({\n      ...state,\n      stepID: 3,\n      undividedEstate: undividedEstateResponse,\n    }));\n\n    const undividedEstateResponseModifiedResult =\n      this.QuestionConsts.UndividedEstateResultText(undividedEstateResponse);\n\n    const undividedEstateClientMessage = this.createClientMessage(\n      undividedEstateResponseModifiedResult\n    );\n    this.addMessageToBotState(undividedEstateClientMessage);\n\n    const netWealthQuestion = this.createChatBotMessage(\n      this.QuestionConsts.NetWealthQuestion\n    );\n    this.addMessageToBotState(netWealthQuestion);\n  };\n\n  handleNetWealth(currencyResponse: string): void {\n    /**\n     *  * function for handling wealth replies.\n     *  * stepID is updated to 3 and then proceed to underage question.\n     *  * conditions for reply in currencyDisplayValue function.\n     */\n    const netWealthQuestion = this.createChatBotMessage(\n      this.QuestionConsts.NetWealthQuestion\n    );\n    const currencyOutputResponse = HelperMethods.currencyDisplayValue(\n      parseInt(currencyResponse)\n    );\n\n    const underAgeQuestion = this.createChatBotMessage(\n      this.QuestionConsts.UnderAgeQuestion,\n      this.QuestionConsts.UnderAgeWidgetOptions\n    );\n\n    if (HelperMethods.validateCurrency(currencyResponse)) {\n      this.setState((state: ChatbotInterface<Person>) => ({\n        ...state,\n        stepID: 4,\n        netWealth: {\n          ...state.netWealth,\n          intValue: currencyResponse,\n          strValue: currencyOutputResponse,\n        },\n      }));\n\n      this.addMessageToBotState(underAgeQuestion);\n    } else {\n      const netWealthWarning = this.createChatBotMessage(\n        this.QuestionConsts.NetWealthWarning\n      );\n\n      this.addMessageToBotState(netWealthWarning);\n      this.addMessageToBotState(netWealthQuestion);\n    }\n  }\n\n  handleUnderAge = (selectedOption: string): void => {\n    this.setState((state: ChatbotInterface<Person>) => ({\n      ...state,\n      stepID: 5,\n      person: {\n        ...state.person,\n        _underAge: selectedOption,\n      },\n    }));\n\n    const selectedOptionModified =\n      this.QuestionConsts.UnderAgeResultText(selectedOption);\n    const underAgeResponse = this.createClientMessage(selectedOptionModified);\n    this.addMessageToBotState(underAgeResponse);\n    const spouseQuestion = this.createChatBotMessage(\n      this.QuestionConsts.SpouseQuestion\n    );\n    this.addMessageToBotState(spouseQuestion);\n  };\n\n  handleSpouseInput = (spouseResponse: string): void => {\n    /**\n     *  * function for handling spouseID replies.\n     *  * stepID is updated to 6 and then further conditions are evaluated next.\n     *  * open reply, no conditions for now.\n     */\n    const spouseID = spouseResponse;\n    this.setState((state: any) => {\n      if (spouseID !== \"\") {\n        if (\n          state.netWealth.intValue <=\n          this.InheritanceConstants.MINIMUM_INHERITANCE_SPOUSE_VS_CHILDREN\n        ) {\n          const rearChildrenQuestion = this.createChatBotMessage(\n            this.QuestionConsts.RearChildrenQuestion,\n            this.QuestionConsts.RearChildrenWidgetOptions\n          );\n          this.addMessageToBotState(rearChildrenQuestion);\n        }\n\n        state = {\n          ...state,\n          stepID: 7,\n          person: { ...state.person, _spouse: new Person(spouseID) },\n          max_depth: null,\n        };\n        const newSuccessorQuestion = this.createChatBotMessage(\n          this.QuestionConsts.addSuccessorquestion1(state.person._personID)\n        );\n        this.addMessageToBotState(newSuccessorQuestion);\n      } else {\n        this.setState((state: any) => ({\n          ...state,\n          stepID: 6,\n        }));\n        const cohabitantQuestion = this.createChatBotMessage(\n          this.QuestionConsts.CohabitantQuestion\n        );\n        this.addMessageToBotState(cohabitantQuestion);\n      }\n      return state;\n    });\n  };\n\n  handleCohabitantInput = (cohabitantResponse: string): void => {\n    /**\n     *  * function for handling cohabitant replies.\n     *  * stepID is updated to 7 and then further conditions are evaluated next.\n     *  * open reply, no conditions for now.\n     */\n    const cohabitantID = cohabitantResponse;\n    this.setState((state: any) => {\n      if (cohabitantID !== \"\") {\n        if (\n          state.netWealth.intValue <=\n          this.InheritanceConstants.MINIMUM_INHERITANCE_COHABITANT_VS_CHILDREN\n        ) {\n          const rearChildrenQuestion = this.createChatBotMessage(\n            this.QuestionConsts.RearChildrenQuestion,\n            this.QuestionConsts.RearChildrenWidgetOptions\n          );\n          this.addMessageToBotState(rearChildrenQuestion);\n        }\n        state = {\n          ...state,\n          stepID: 7,\n          person: { ...state.person, _cohabitant: new Person(cohabitantID) },\n        };\n      }\n      return state;\n    });\n    // this.setState((state) => {\n    //   console.log(state);\n    //   return state;\n    // });\n  };\n\n  handleSuccessorInput = (successorResponse: string): void => {\n    const child_id = successorResponse;\n    this.setState((state: any) => {\n      if (state.person != undefined) {\n        if (child_id === \"\") {\n          console.log(state.person);\n          state = {\n            ...state,\n            stepID: 8,\n          };\n          return;\n        }\n        const child = this.family.get_or_create_person(child_id);\n\n        state.person.add_child(child, true);\n        let allChildrenID = \"\";\n        for (const child of state.person._children) {\n          allChildrenID += child._personID + \", \";\n        }\n        allChildrenID =\n          \"{ \" + allChildrenID.slice(0, allChildrenID.length - 2) + \" }\";\n        // TODO\n        // const aliveQuestion = this.createChatBotMessage(\n        //   this.QuestionConsts.AliveQuestionText(),\n        //   this.QuestionConsts.AliveWidgetOptions\n        // );\n        // this.addMessageToBotState(aliveQuestion);\n        // state = {\n        //   ...state,\n        //   stepID: 9,\n        //   temp: allChildrenID,\n        // };\n        // const newSuccessorQuestion = this.createChatBotMessage(\n        //   this.QuestionConsts.addSuccessorquestion2(\n        //     state.person._personID,\n        //     allChildrenID\n        //   )\n        // );\n\n        // this.addMessageToBotState(newSuccessorQuestion);\n        return state;\n      }\n    });\n  };\n\n  handleDeceasedOption = (selectedOption: string): void => {\n    this.setState((state: any) => {\n      if (!selectedOption) {\n        state = {\n          ...state,\n          stepID: 10,\n          person: { ...state.person, _deceased: true },\n        };\n        if (state.max_depth === null) {\n          // todo\n          //  fix this implementation\n        }\n      }\n    });\n  };\n\n  handleRearChildrenOptionWidget = (rearChildrenResponse: string): void => {\n    console.log(rearChildrenResponse);\n  };\n\n  // Generic functions\n  addMessageToBotState = (messages: ReactElement<any, any>): void => {\n    if (Array.isArray(messages)) {\n      this.setState((state: any) => ({\n        ...state,\n        messages: [...state.messages, ...messages],\n      }));\n    } else {\n      this.setState((state: any) => ({\n        ...state,\n        messages: [...state.messages, messages],\n      }));\n    }\n  };\n\n  handleDefault = (): void => {\n    const message = this.createChatBotMessage(this.QuestionConsts.DefaultText, {\n      withAvatar: true,\n    });\n\n    this.addMessageToBotState(message);\n  };\n}\n\nexport default ActionProvider;\n\n/**\n * * this code is for processing currency numbers to format: kr 123.456\n//  * ? const finalCurrency = new Intl.NumberFormat(\"nb-NB\", {\n * ? style: \"currency\",\n * ? currency: \"NOK\",\n * ? currencyDisplay: \"narrowSymbol\",\n * ? }).format(outputCurrency);*/\n","// import { FormattedMessage } from \"react-intl\";\n\nexport const isAlphaNumeric = (data: string): boolean => {\n  const letters = /^[a-zA-Z0-9\\s]+$/;\n  if (data.match(letters)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const validateCurrency = (inputCurrency: string): boolean => {\n  // const currencyMatchExpression = /^((\\d{1,3},)*\\d{3}|\\d{1,3})\\.\\d{2}$|^((\\d{1,3}\\.)*\\d{3}|\\d{1,3})$/;\n  const currencyMatchExpression = /^\\d+$/;\n  if (inputCurrency.match(currencyMatchExpression)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const currencyDisplayValue = (inputCurrencyValue: number): string => {\n  return new Intl.NumberFormat(\"nb-NO\", {\n    style: \"currency\",\n    currency: \"NOK\",\n    currencyDisplay: \"narrowSymbol\",\n  }).format(inputCurrencyValue);\n};\n\n// export const validateSpouseReply = (inputSpouseResponse) => {\n//   console.log(inputSpouseResponse);\n//   switch (inputSpouseResponse) {\n//     case \"\":\n//       console.log(\"blank\");\n//       break;\n//     case 1:\n//       console.log(\"1\");\n//       break;\n//     default:\n//       console.log(\"default\");\n//   }\n// };\n","import { ReactElement } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { Chatbot } from \"react-chatbot-kit\";\nimport Config from \"../Components/InheritanceCalculatorComponents/ChatbotComponent/Config.js\";\nimport MessageParser from \"../Components/InheritanceCalculatorComponents/ChatbotComponent/MessageParser\";\nimport ActionProvider from \"../Components/InheritanceCalculatorComponents/ChatbotComponent/ActionProvider\";\n\nconst InheritanceCalculatorPage = (): ReactElement => {\n  return (\n    <div>\n      <Typography variant=\"h2\" align=\"center\">\n        Inheritance Calculator\n      </Typography>\n      <Chatbot\n        config={Config}\n        messageParser={MessageParser}\n        actionProvider={ActionProvider}\n      />\n    </div>\n  );\n};\n\nexport default InheritanceCalculatorPage;\n","import { ReactElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n// import LangButton from \"./LangButton/LangButton\";\n\ninterface propsTypes {\n  description: string;\n  title: string;\n}\n\nconst Copyright = (): ReactElement => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Arvebot\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nconst Footer = (props: propsTypes): ReactElement => {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        {title}\n      </Typography>\n      <Typography\n        variant=\"subtitle1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n      >\n        {description}\n      </Typography>\n      <Copyright />\n\n      {/* {Object.keys(props.langValue).map((lang) => (\n        <LangButton\n          key={lang}\n          langButtonValue={props.langValue[lang]}\n          sendDataToParent={props.sendDataToParent}\n        />\n      ))} */}\n    </Container>\n  );\n};\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/homepage-image.8ea4a75c.jpg\";","import { ReactElement } from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst ResourcesPage = (): ReactElement => {\n  return (\n    <Typography variant=\"h2\" align=\"center\">\n      ResourcesPage\n    </Typography>\n  );\n};\n\nexport default ResourcesPage;\n","// React\nimport { ReactElement, useState } from \"react\";\n// material-ui\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\n// react-router\nimport { Route, Switch } from \"react-router-dom\";\nimport { IntlProvider } from \"react-intl\";\n// local - check in newer chrome version and remove. added polyfill because nb locale not supported in chromium>92\n// https://github.com/formatjs/formatjs/issues/3066\nimport \"@formatjs/intl-datetimeformat/polyfill-force\";\nimport \"@formatjs/intl-datetimeformat/locale-data/nb\";\nimport \"@formatjs/intl-numberformat/polyfill-force\";\nimport \"@formatjs/intl-numberformat/locale-data/nb\";\nimport \"@formatjs/intl-numberformat/locale-data/en\";\n//\nimport theme from \"./theme\";\nimport Header from \"./Components/Generic/Header/Header\";\nimport HomePage from \"./Pages/HomePage\";\nimport AboutPage from \"./Pages/AboutPage\";\nimport InheritanceCalculatorPage from \"./Pages/InheritanceCalculatorPage\";\nimport Footer from \"./Components/Generic/Footer/Footer\";\nimport HomePageImage from \"./assets/images/homepage-image.jpg\";\nimport ResourcesPage from \"./Pages/ResourcesPage\";\n\nimport Norsk from \"./languages/translationNO.json\";\nimport English from \"./languages/translationEN.json\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundImage: `url(${HomePageImage})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    height: \"100vh\",\n  },\n  rootPaper: {\n    marginTop: \"5rem\",\n    minHeight: \"100vh\",\n    background:\n      \"radial-gradient( circle farthest-corner at 10% 20%,  #FCCABD 0%, #4151C9 45.5% )\",\n    opacity: \"1\",\n  },\n});\n\nconst menuItems = (\n  <Switch>\n    <Route exact path=\"/\" component={HomePage} />\n    <Route path=\"/about\" component={AboutPage} />\n    <Route path=\"/calculator\" component={InheritanceCalculatorPage} />\n    <Route path=\"/resources\" component={ResourcesPage} />\n  </Switch>\n);\n\nconst App = (): ReactElement => {\n  const classes = useStyles();\n  const [lang, setLang] = useState(\"nb-NO\");\n  const [langMessages, setLangMessages] = useState(Norsk);\n  // const sendDataToParent = (index) => {\n  //   setLang(index.code);\n  //   if (index.code === \"nb-NO\") {\n  //     setLangMessages(Norsk);\n  //   } else {\n  //     setLangMessages(English);\n  //   }\n  // };\n\n  // const LangValue = {\n  //   no: {\n  //     code: \"nb-NO\",\n  //     name: \"Norsk\",\n  //   },\n  //   en: {\n  //     code: \"en-US\",\n  //     name: \"English\",\n  //   },\n  // };\n  return (\n    <IntlProvider locale={lang} messages={langMessages}>\n      <MuiThemeProvider theme={theme}>\n        <Paper\n          role=\"img\"\n          className={classes.root}\n          aria-label=\"Image by Free-Photos from Pixabay\"\n        >\n          <Header />\n          <Paper className={classes.rootPaper}>{menuItems}</Paper>\n        </Paper>\n        {/* <Footer langValue={LangValue} sendDataToParent={sendDataToParent} /> */}\n        <Footer description=\"Arvebot\" title=\"Arvebot\" />\n\n        {/* Route components are rendered if the path prop matches the current URL */}\n      </MuiThemeProvider>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n\n// react-spring -> animations\n// nivo for visualisation\n// primary - 003049   , 264653 , 031d44\n// secondary - EAE2B7   ,e76f51 , d5896f\n","import { StrictMode } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\n\nimport App from \"./App\";\nimport { render } from \"react-dom\";\n\nrender(\n  <StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </StrictMode>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}